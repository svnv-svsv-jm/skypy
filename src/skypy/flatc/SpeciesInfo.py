# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
np = import_numpy()

class SpeciesInfo(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls) -> int:
        return 16

    # SpeciesInfo
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SpeciesInfo
    def Species(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # SpeciesInfo
    def Form(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
    # SpeciesInfo
    def Model(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # SpeciesInfo
    def Color(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(6))
    # SpeciesInfo
    def BodyType(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(7))
    # SpeciesInfo
    def Height(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # SpeciesInfo
    def Weight(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(10))
    # SpeciesInfo
    def Reserved(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))
    # SpeciesInfo
    def Reserved1(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(13))
    # SpeciesInfo
    def Reserved2(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(14))

def CreateSpeciesInfo(builder, species, form, model, color, bodyType, height, weight, reserved, reserved1, reserved2):
    builder.Prep(2, 16)
    builder.Pad(1)
    builder.PrependUint8(reserved2)
    builder.PrependUint8(reserved1)
    builder.PrependUint8(reserved)
    builder.PrependUint16(weight)
    builder.PrependUint16(height)
    builder.PrependUint8(bodyType)
    builder.PrependUint8(color)
    builder.PrependUint16(model)
    builder.PrependUint16(form)
    builder.PrependUint16(species)
    return builder.Offset()
