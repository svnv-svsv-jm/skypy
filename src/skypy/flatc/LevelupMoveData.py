# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
np = import_numpy()

class LevelupMoveData(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls) -> int:
        return 4

    # LevelupMoveData
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LevelupMoveData
    def Move(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # LevelupMoveData
    def Level(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))

def CreateLevelupMoveData(builder, move, level):
    builder.Prep(2, 4)
    builder.PrependUint16(level)
    builder.PrependUint16(move)
    return builder.Offset()
